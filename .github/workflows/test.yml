name: Test LocalGov Drupal Alert Banner

on:
  push:
    branches:
      - '1.x'
  pull_request:
    branches:
      - '1.x'

jobs:

  build:
    name: Install Drupal
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - drupal-version: "~8"
            php-version: "7.4"
          - drupal-version: "~9"
            php-version: "7.4"

    steps:

      - name: Save git branch and git repo names to env if this is not a pull request
        if: github.event_name != 'pull_request'
        run: |
          echo "GIT_BASE=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "GIT_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "GIT_REPO=${GITHUB_REPOSITORY}" >> $GITHUB_ENV

      - name: Save git branch and git repo names to env if this is a pull request
        if: github.event_name == 'pull_request'
        run: |
          echo "GIT_BASE=${GITHUB_BASE_REF}" >> $GITHUB_ENV
          echo "GIT_BRANCH=${GITHUB_HEAD_REF}" >> $GITHUB_ENV
          echo "GIT_REPO=${{ github.event.pull_request.head.repo.full_name }}" >> $GITHUB_ENV

      - name: Set composer branch reference for main version branches
        if: endsWith(github.ref, '.x')
        run: echo "COMPOSER_REF=${GIT_BRANCH}-dev" >> $GITHUB_ENV
  
      - name: Set composer branch reference for main version branches
        if: endsWith(github.ref, '.x') == false
        run: echo "COMPOSER_REF=dev-${GIT_BRANCH}" >> $GITHUB_ENV
        
      - name: Get the latest tagged release for branch version
        run: |
          LATEST_RELEASE=$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/localgovdrupal/localgov_alert_banner/git/matching-refs/tags/${GIT_BASE%'.x'} | grep -Po '(?<=refs/tags/)[^"]+' | tail -1)
          if [ -z $LATEST_RELEASE ]; then LATEST_RELEASE=1; fi
          echo "LATEST_RELEASE=${LATEST_RELEASE}" >> $GITHUB_ENV

      - uses: hmarr/debug-action@v2
          
      - name: Cached workspace
        uses: actions/cache@v2
        with:
          path: ./html
          key: localgov-build-${{ matrix.drupal-version }}-${{ matrix.php-version }}-${{ github.run_id }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Clone drupal_container
        uses: actions/checkout@v2
        with:
          repository: localgovdrupal/drupal-container
          ref: php${{ matrix.php-version }}

      - name: Install Drupal
        run: |
          composer create-project --stability dev drupal/recommended-project:${{ matrix.drupal-version }} ./html
          composer --working-dir=html config repositories.1 vcs git@github.com:${GIT_REPO}.git
          composer global config github-oauth.github.com ${{ github.token }}
          composer --working-dir=html require mglaman/phpstan-drupal phpstan/phpstan-deprecation-rules
          composer --working-dir=html require --with-all-dependencies localgovdrupal/${{ github.event.repository.name }}:"${COMPOSER_REF} as ${LATEST_RELEASE}"

  phpcs:
    name: Coding standards checks
    needs: build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - drupal-version: "~8"
            php-version: "7.4"
          - drupal-version: "~9"
            php-version: "7.4"

    steps:

      - name: Cached workspace
        uses: actions/cache@v2
        with:
          path: ./html
          key: localgov-build-${{ matrix.drupal-version }}-${{ matrix.php-version }}-${{ github.run_id }}
          restore-keys: |
            localgov-build-${{ matrix.drupal-version }}-${{ matrix.php-version }}-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      - name: Run coding standards checks
        run: |
          cd html
          curl -o phpcs.xml.dist https://raw.githubusercontent.com/localgovdrupal/.github/master/testing-config/phpcs.xml.dist
          vendor/bin/phpcs --config-set installed_paths vendor/drupal/coder/coder_sniffer/
          vendor/bin/phpcs -p --standard=Drupal --standard=DrupalPractice "web/modules/contrib/${GITHUB_REPO##*/}"
          ./vendor/bin/phpcs -p

  phpstan:
    name: Deprecated code checks
    needs: build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - drupal-version: "~8"
            php-version: "7.4"
          - drupal-version: "~9"
            php-version: "7.4"

    steps:

      - name: Cached workspace
        uses: actions/cache@v2
        with:
          path: ./html
          key: localgov-build-${{ matrix.drupal-version }}-${{ matrix.php-version }}-${{ github.run_id }}
          restore-keys: |
            localgov-build-${{ matrix.drupal-version }}-${{ matrix.php-version }}-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      - name: Run deprecated code checks
        run: |
          cd html
          curl -o phpstan.neon https://raw.githubusercontent.com/localgovdrupal/.github/master/testing-config/phpstan.neon
          ./vendor/bin/phpstan analyse -c ./phpstan.neon "web/modules/contrib/${GITHUB_REPO##*/}"

  phpunit:
    name: PHPUnit tests
    needs: build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - drupal-version: "~8"
            php-version: "7.4"
          - drupal-version: "~9"
            php-version: "7.4"

    steps:

      - name: Clone drupal_container
        uses: actions/checkout@v2
        with:
          repository: localgovdrupal/drupal-container
          ref: master

      - name: Cached workspace
        uses: actions/cache@v2
        with:
          path: ./html
          key: localgov-build-${{ matrix.drupal-version }}-${{ matrix.php-version }}-${{ github.run_id }}
          restore-keys: |
            localgov-build-${{ matrix.drupal-version }}-${{ matrix.php-version }}-

      - name: Start Docker environment
        run: docker-compose -f docker-compose.yml up -d

      - name: Run PHPUnit tests
        run: |
          mkdir -p ./html/web/sites/simpletest && chmod 777 ./html/web/sites/simpletest
          curl -o ./html/phpunit.xml.dist https://raw.githubusercontent.com/localgovdrupal/.github/master/testing-config/phpunit.xml.dist
          docker exec -t drupal bash -c 'chown docker:docker -R /var/www/html'
          docker exec -u docker -t drupal bash -c "cd /var/www/html && ./vendor/bin/phpunit --testdox web/modules/contrib/${GITHUB_REPO##*/}"
          #docker exec -u docker -t drupal bash -c "cd /var/www/html && ./vendor/bin/paratest --processes=4
