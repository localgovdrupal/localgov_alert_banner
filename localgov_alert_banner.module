<?php

/**
 * @file
 * Contains localgov_alert_banner.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\datetime\Plugin\Field\FieldType\DateTimeItemInterface;
use Drupal\Core\Datetime\DrupalDateTime;

/**
 * Implements hook_help().
 */
function localgov_alert_banner_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the localgov_alert_banner module.
    case 'help.page.localgov_alert_banner':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Alert Banner Support module') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_preprocess_localgov_alert_banner().
 */
function localgov_alert_banner_preprocess(&$variables) {

  if (isset($variables['elements']['#localgov_alert_banner'])) {

    // Get token.
    $token = $variables['elements']['#localgov_alert_banner']->getToken();

    // Add a hidden class.
    $variables['attributes']['class'][] = 'hidden';

    // Token as attribute.
    $variables['attributes']['data-dismiss-alert-token'] = $token;

  }
}

/**
 * Implements hook_theme().
 */
function localgov_alert_banner_theme() {
  $theme = [];
  $theme['localgov_alert_banner'] = [
    'render element' => 'elements',
    'file' => 'localgov_alert_banner.page.inc',
    'template' => 'localgov-alert-banner',
  ];
  $theme['localgov_alert_banner_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'localgov_alert_banner.page.inc',
  ];
  return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function localgov_alert_banner_theme_suggestions_localgov_alert_banner(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#localgov_alert_banner'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'localgov_alert_banner__' . $sanitized_view_mode;
  $suggestions[] = 'localgov_alert_banner__' . $entity->bundle();
  $suggestions[] = 'localgov_alert_banner__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'localgov_alert_banner__' . $entity->id();
  $suggestions[] = 'localgov_alert_banner__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_cron().
 */
function localgov_alert_banner_cron() {

  // Get current time.
  $now = new DrupalDateTime('now');
  $now->setTimezone(new \DateTimeZone(DateTimeItemInterface::STORAGE_TIMEZONE));
  $now_formatted = $now->format(DateTimeItemInterface::DATETIME_STORAGE_FORMAT);

  // Get alert banners that need to be put live.
  $alert_banner_storage = \Drupal::entityTypeManager()->getStorage('localgov_alert_banner');
  $alert_banner_ids = $alert_banner_storage->getQuery()->condition('status', '0')
    ->condition('date_put_live', $now_formatted, '<=')
    ->condition('date_remove', $now_formatted, '>')
    ->execute();

  foreach ($alert_banner_ids as $id) {
    $alert_banner_storage->load($id)
      ->set('status', '1')
      ->save();
  }

  // Get alert banners that need to be removed.
  $alert_banner_storage = \Drupal::entityTypeManager()->getStorage('localgov_alert_banner');
  $alert_banner_ids = $alert_banner_storage->getQuery()->condition('status', '1')
    ->condition('date_remove', $now_formatted, '<=')
    ->execute();
  foreach ($alert_banner_ids as $id) {
    $alert_banner_storage->load($id)
      ->set('status', '0')
      ->save();
  }
}
